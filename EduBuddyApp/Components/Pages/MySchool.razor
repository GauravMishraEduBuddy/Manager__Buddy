@page "/myschool"
@using EduBuddyApp.Models
@using EduBuddyApp.Services
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject ISchoolService SchoolService
@inject UserState UserState

<h1>My School</h1>

@if (school == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <img src="@SchoolService.GetSchoolLogoUrl(school.SchoolID)"
         alt="No image" class="img-fluid rounded mb-3"
         style="width: 60px; height: 60px; object-fit: cover; border-radius: 50%;" />
    <table class="table">
        <tbody>
            <tr><th>Name</th><td>@school.SchoolName</td></tr>
            @if (!string.IsNullOrEmpty(school.Address))
            {
                <tr><th>Address</th><td>@school.Address</td></tr>
            }
            @if (!string.IsNullOrEmpty(school.City))
            {
                <tr><th>City</th><td>@school.City</td></tr>
            }
            @if (!string.IsNullOrEmpty(school.PhoneNumber))
            {
                <tr><th>Phone</th><td>@school.PhoneNumber</td></tr>
            }
            @if (!string.IsNullOrEmpty(school.Email))
            {
                <tr><th>Email</th><td>@school.Email</td></tr>
            }
            @if (school.InstituteType is not null)
            {
                <tr><th>Type</th><td>@school.InstituteType</td></tr>
            }
            <tr><th>Active</th><td>@(school.IsCurrentlyActive ? "Yes" : "No")</td></tr>
        </tbody>
    </table>
}

@code {
    private School? school;

    protected override async Task OnInitializedAsync()
    {
        var id = UserState.SchoolId ?? 0;
        if (id != 0)
        {
            school = await SchoolService.GetSchoolAsync(id);
        }
    }
}
