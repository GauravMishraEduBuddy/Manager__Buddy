@using EduBuddyApp.Models
@using EduBuddyApp.Services
@inject ISectionService SectionService
@inject UserState UserState
@inject ISyllabusService SyllabusService

<RadzenCard Style="margin: 10px; padding: 15px; box-shadow: 0 2px 5px rgba(0,0,0,0.15);">
    @if (chapter == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div>
            <div style="font-size: 1.2rem; font-weight: bold;">
                Chapter @chapter.ChapterNumber: @chapter.ChapterTitle
            </div>
            <div style="font-style: italic; color: gray; margin-bottom: 5px;">
                (ID: @chapter.ChapterID)
            </div>
            
            <div style="display: flex; flex-wrap: wrap; gap: 10px; font-size: 0.9rem;">
                @if (chapter.ChapterExcercises.HasValue)
                {
                    <div><strong>Exercises:</strong> @chapter.ChapterExcercises</div>
                }
                @if (chapter.ChapterAllottedLectures.HasValue)
                {
                    <div><strong>Allotted Lectures:</strong> @chapter.ChapterAllottedLectures</div>
                }
                @if (chapter.DifficultyLevel.HasValue)
                {
                    <div><strong>Difficulty:</strong> @chapter.DifficultyLevel</div>
                }
                @if (!string.IsNullOrEmpty(chapter.Topics))
                {
                    <div><strong>Topics:</strong> @chapter.Topics</div>
                }
                @if (!string.IsNullOrEmpty(chapter.ChapterActivity))
                {
                    <div><strong>Activity:</strong> @chapter.ChapterActivity</div>
                }
                @if (chapter.CountofPeriodEntries.HasValue)
                {
                    <div><strong>Period Entries:</strong> @chapter.CountofPeriodEntries</div>
                }
               
                @if (!string.IsNullOrEmpty(chapter.ExamNamesConcatenated))
                {
                    <div><strong>Exams:</strong> @chapter.ExamNamesConcatenated</div>
                }
            </div>
        </div>
    }
</RadzenCard>

@code {
    [Parameter]
    public int ChapterID { get; set; }

    private ChaptersViewModel? chapter;

    protected override async Task OnInitializedAsync()
    {
        chapter = await SyllabusService.GetChapterAsync(ChapterID);
    }
}