@using Syncfusion.Blazor.Grids
@using EduBuddyApp.Models
@using EduBuddyApp.Services
@inject ISubjectService SubjectService
@inject NavigationManager NavigationManager

<h3>Period Entry Details for Subject @SubjectId</h3>

@if (periodEntries == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <SfGrid @ref="GridObj" DataSource="@periodEntries"
            AllowFiltering="true" AllowSorting="true" ShowColumnChooser="true"
            AllowPaging="true" AllowResizing="true" Width="100%"
            EnableAdaptiveUI="true" RowRenderingMode="RowDirection.Vertical"
            Toolbar="@(new List<string>() { "Search", "ColumnChooser" })" AllowTextWrap="true"
                class="table table-striped">
        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel" />
              <Syncfusion.Blazor.Grids.GridTemplates>
        <DetailTemplate>
                     @{
                // Cast the built-in context to your Employee model.
                    var periodEntry = context as PeriodEntryViewModel;
                    int chapterId = periodEntry?.ChapterId ?? 0;
                    }
                    <ChaptersShortCard ChapterId="@chapterId"  />
                     @{ var item = context as PeriodEntryViewModel; 
                        <button type="button" class="btn btn-secondary" @onclick="() => NavigateToAttendance(item?.PeriodEntryID ?? 0)" >Attendance</button>
                    }
                    
                   </DetailTemplate>
              </Syncfusion.Blazor.Grids.GridTemplates>
        <GridColumns>
            <GridColumn Field="LectureDate" HeaderText="Lecture Date" Width="150" Type="ColumnType.Date" Format="d" />
            <GridColumn Field="LecturePeriod" HeaderText="Lecture Period" Width="100" TextAlign="Syncfusion.Blazor.Grids.TextAlign.Center" />
            <GridColumn Field="LectureTypeName" HeaderText="Lecture Type" Width="150" />
            <GridColumn Field="ChapterNumber" HeaderText="Chapter #" Width="100" TextAlign="Syncfusion.Blazor.Grids.TextAlign.Center" />
            <GridColumn Field="ChapterTitle" HeaderText="Chapter Title" Width="200" />
            <GridColumn Field="Details" HeaderText="Details" Width="250" />
            @* <GridColumn HeaderText="Actions" Width="120">
                <Template>
                    @{ var item = context as PeriodEntryViewModel; }
                    <div class="btn-group">
                        <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                            Actions
                        </button>
                        <ul class="dropdown-menu">
                            <li>
                                <a class="dropdown-item" @onclick="() => NavigateToAttendance(item?.PeriodEntryID ?? 0)">Attendance</a>
                            </li>
                        </ul>
                    </div>
                </Template>
            </GridColumn> *@
        </GridColumns>
    </SfGrid>
}

@code {
    [Parameter]
    public int SubjectId { get; set; }

    private SfGrid<PeriodEntryViewModel> GridObj;
    private List<PeriodEntryViewModel> periodEntries = new List<PeriodEntryViewModel>();

    protected override async Task OnInitializedAsync()
    {
        periodEntries = await SubjectService.GetPeriodEntryViewModelsAsync(SubjectId);
    }

    private void NavigateToAttendance(int periodEntryId)
    {
        if (periodEntryId > 0)
        {
            NavigationManager.NavigateTo($"/periodattendance/{periodEntryId}");
        }
    }
}